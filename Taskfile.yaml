version: "3"

dotenv: [".env"]

tasks:
  client:
    deps:
      - build
    env:
      AWS_STAGE: local
      LOG_LEVEL: DEBUG
    cmds:
      - ./bin/client/bootstrap
  user:
    deps:
      - build
    env:
      AWS_STAGE: local
      LOG_LEVEL: DEBUG
    cmds:
      - ./bin/user/bootstrap
  clean:
    cmds:
      - rm -rf ./bin ./dist
  build:
    deps:
      - clean
    env:
      GOARCH: amd64
      GOOS: linux
      CGO_ENABLED: 0
    cmds:
      - |
        mkdir -p ./bin/client/http ./dist/client/http ./bin/user/http ./dist/user/http
        go build -ldflags="-s -w" -tags lambda.norpc -o ./bin/client/http/bootstrap ./client/client_fiber.go ./client/client_main.go
        go build -ldflags="-s -w" -tags lambda.norpc -o ./bin/user/http/bootstrap ./user/user_dynamodb.go ./user/user_fiber.go ./user/user_main.go
  deploy:
    deps:
      - build
    cmds:
      - |
        cd ./terragrunt
        terragrunt run-all apply --terragrunt-non-interactive
        cd ..
  undeploy:
    cmds:
      - |
        cd ./terragrunt
        terragrunt run-all destroy --terragrunt-non-interactive
        cd ..
  output:
    cmds:
      - |
        cd ./terragrunt
        terragrunt run-all output --terragrunt-non-interactive
        cd ..
